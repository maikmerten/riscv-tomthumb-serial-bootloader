/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.maikmerten.serialbootloader.gui;

import de.maikmerten.serialbootloader.BootloaderProtocol;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.exbin.deltahex.CodeArea;
import org.exbin.utils.binary_data.ByteArrayData;

/**
 *
 * @author maik
 */
public class MainWindow extends javax.swing.JFrame {

	private BootloaderProtocol prot;
	private CodeArea codearea; // = new CodeArea();
	
	/**
	 * Creates new form MainWindow
	 */
	public MainWindow(BootloaderProtocol prot) {
		initComponents();
		
		this.setSize(800, 600);
		
		this.prot = prot;
		this.codearea = new CodeArea();
		this.codearea.setData(new ByteArrayData("Welcome".getBytes()));
		jPanelHex.add(codearea);
		
		
	}
	
	private void doRead() {
		try {
			long address = Long.parseLong(jTextFieldAddress.getText());
			int length = Integer.parseInt(jTextFieldBytes.getText());
			
			byte[] buf = prot.readMemArea(address, length);
			ByteArrayData bad = new ByteArrayData(buf);
			codearea.setData(bad);
			
		} catch (Exception ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		}		
	}
	
	private void doWrite() {
		try {
			long address = Long.parseLong(jTextFieldAddress.getText());
			File f = new File(jTextFieldFile.getText());
			
			FileInputStream fis = new FileInputStream(f);
			ByteArrayOutputStream baos = new ByteArrayOutputStream();
			
			byte[] buf = new byte[512];
			int read = fis.read(buf);
			while(read >= 0) {
				baos.write(buf, 0, read);
				read = fis.read(buf);
			}
			buf = baos.toByteArray();
			prot.writeMemArea(address, buf);
			doRead();
		} catch (Exception ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		}				
	}
	
	private void doCall() {
		try {
			long address = Long.parseLong(jTextFieldAddress.getText());
			prot.callAddress(address);
		} catch (Exception ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		}			
	}
	

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelControls = new javax.swing.JPanel();
        jTextFieldAddress = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldBytes = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonRead = new javax.swing.JButton();
        jButtonWrite = new javax.swing.JButton();
        jButtonCall = new javax.swing.JButton();
        jTextFieldFile = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanelHex = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Serial bootloader");
        setSize(new java.awt.Dimension(1024, 768));

        jPanelControls.setBorder(javax.swing.BorderFactory.createTitledBorder("Controls"));

        jTextFieldAddress.setText("1024");

        jLabel1.setText("Address:");

        jTextFieldBytes.setText("1024");

        jLabel2.setText("Read bytes:");

        jButtonRead.setText("Read memory");
        jButtonRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadActionPerformed(evt);
            }
        });

        jButtonWrite.setText("Write to memory");
        jButtonWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWriteActionPerformed(evt);
            }
        });

        jButtonCall.setText("Call address");
        jButtonCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCallActionPerformed(evt);
            }
        });

        jTextFieldFile.setText("/tmp/test.txt");

        jLabel3.setText("File:");

        javax.swing.GroupLayout jPanelControlsLayout = new javax.swing.GroupLayout(jPanelControls);
        jPanelControls.setLayout(jPanelControlsLayout);
        jPanelControlsLayout.setHorizontalGroup(
            jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextFieldBytes, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                        .addComponent(jTextFieldAddress))
                    .addComponent(jTextFieldFile, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                .addGroup(jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonCall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonWrite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelControlsLayout.setVerticalGroup(
            jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonRead))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButtonWrite)
                    .addComponent(jTextFieldBytes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanelControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCall)
                    .addComponent(jTextFieldFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        getContentPane().add(jPanelControls, java.awt.BorderLayout.PAGE_END);

        jPanelHex.setBorder(javax.swing.BorderFactory.createTitledBorder("Memory data"));
        jPanelHex.setMinimumSize(new java.awt.Dimension(640, 480));
        jPanelHex.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanelHex, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadActionPerformed
		doRead();
    }//GEN-LAST:event_jButtonReadActionPerformed

    private void jButtonWriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWriteActionPerformed
		doWrite();
    }//GEN-LAST:event_jButtonWriteActionPerformed

    private void jButtonCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCallActionPerformed
        doCall();
    }//GEN-LAST:event_jButtonCallActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCall;
    private javax.swing.JButton jButtonRead;
    private javax.swing.JButton jButtonWrite;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanelControls;
    private javax.swing.JPanel jPanelHex;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldBytes;
    private javax.swing.JTextField jTextFieldFile;
    // End of variables declaration//GEN-END:variables
}
